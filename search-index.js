var searchIndex = {};
searchIndex["more_asserts"] = {"doc":"Small library providing some macros helpful for asserting.","items":[[14,"assert_ne!","more_asserts","Panics if the two expressions are equal. Requires that the types be\ncomparable with `!=`.",null,null],[14,"assert_lt!","","Panics if the first expression is not strictly less than the second.\nRequires that the types be comparable with `&lt;`.",null,null],[14,"assert_gt!","","Panics if the first expression is not strictly greater than the second.\nRequires that the types be comparable with `&gt;`.",null,null],[14,"assert_le!","","Panics if the first expression is not less than or equal to the second.\nRequires that the types be comparable with `&lt;=`.",null,null],[14,"assert_ge!","","Panics if the first expression is not greater than or equal to the second.\nRequires that the types be comparable with `&gt;=`.",null,null],[14,"debug_assert_ne!","","Panics if the two expressions are equal. Requires that the types be\ncomparable with `!=`.",null,null],[14,"debug_assert_lt!","","Panics if the first expression is not strictly less than the second.\nRequires that the types be comparable with `&lt;`.",null,null],[14,"debug_assert_gt!","","Panics if the first expression is not strictly greater than the second.\nRequires that the types be comparable with `&gt;`.",null,null],[14,"debug_assert_le!","","Panics if the first expression is not less than or equal to the second.\nRequires that the types be comparable with `&lt;=`.",null,null],[14,"debug_assert_ge!","","Panics if the first expression is not greater than or equal to the second.\nRequires that the types be comparable with `&gt;=`.",null,null],[14,"debug_unreachable!","","Panics if reached. This is a variant of the standard library&#39;s `unreachable!`\nmacro that is controlled by `cfg!(debug_assertions)`.",null,null]],"paths":[]};
initSearch(searchIndex);
